---

- name: check if redis service already exists
  stat: path=/etc/init/redis.conf
  register: redis_conf

- name: ensure redis service is stopped if it already exists
  service:
    name: redis
    state: stopped
  when: redis_conf.stat.exists == True

- name: update apt
  apt: update_cache=yes

- name: ensure packages installed
  apt:
    pkg: "{{ item }}"
    state: latest
  with_items:
    - make
    - build-essential
    - tcl8.5

- name: download latest stable redis
  get_url:
    url: "http://download.redis.io/redis-stable.tar.gz"
    dest: /tmp/redis-stable.tar.gz

- name: untar redis
  command: tar zxf /tmp/redis-stable.tar.gz -C /tmp

- name: build redis
  command: make -C /tmp/redis-stable

- name: create redis group
  group:
    name: "{{ redis_group }}"
    state: present
    system: yes

- name: create redis user
  user:
    name: "{{ redis_user }}"
    group: "{{ redis_group }}"
    createhome: no
    shell: /bin/false
    system: yes
    state: present

- name: make sure that /etc/redis exists
  file:
    path: /etc/redis
    state: directory
    mode: 0755

- name: make sure that /var/db/redis exists
  file:
    path: /var/db/redis
    state: directory
    mode: 0755
    group: "{{ redis_group }}"
    owner: "{{ redis_user }}"

- name: make sure redis.log file exists
  copy:
    src: redis.log
    dest: /var/log/redis.log
    owner: "{{ redis_user }}"
    group: "{{ redis_group }}"
    mode: 0644

- name: copy upstart file
  template:
    src: upstart.conf.j2
    dest: /etc/init/redis.conf

- name: copy redis.conf file
  copy:
    src: redis.conf
    dest: /etc/redis/redis.conf
    group: "{{ redis_group }}"
    owner: "{{ redis_user }}"

- name: copy custom template
  template:
    src: redis.local.conf.j2
    dest: /etc/redis/redis.local.conf
    group: "{{ redis_group }}"
    owner: "{{ redis_user }}"

- name: copy redis-local script
  template:
    src: redis-local.j2
    dest: /usr/local/bin/redis-local
    mode: 0755

- name: installing redis binaries
  command: "cp /tmp/redis-stable/src/{{ item }} /usr/local/bin"
  with_items:
    - redis-server
    - redis-cli
    - redis-check-aof
    - redis-check-dump

- name: cleaning up build files
  command: "rm -rf /tmp/{{ item }}"
  with_items:
    - redis-stable
    - redis-stable.tar.gz

- name: ensure redis service is restarted
  service:
    name: redis
    state: restarted
